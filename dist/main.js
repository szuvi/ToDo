(()=>{"use strict";var t="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto),e=new Uint8Array(16);function n(){if(!t)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return t(e)}const o=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i,r=function(t){return"string"==typeof t&&o.test(t)};for(var s=[],i=0;i<256;++i)s.push((i+256).toString(16).substr(1));const a=function(t,e,o){var i=(t=t||{}).random||(t.rng||n)();if(i[6]=15&i[6]|64,i[8]=63&i[8]|128,e){o=o||0;for(var a=0;a<16;++a)e[o+a]=i[a];return e}return function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=(s[t[e+0]]+s[t[e+1]]+s[t[e+2]]+s[t[e+3]]+"-"+s[t[e+4]]+s[t[e+5]]+"-"+s[t[e+6]]+s[t[e+7]]+"-"+s[t[e+8]]+s[t[e+9]]+"-"+s[t[e+10]]+s[t[e+11]]+s[t[e+12]]+s[t[e+13]]+s[t[e+14]]+s[t[e+15]]).toLowerCase();if(!r(n))throw TypeError("Stringified UUID is invalid");return n}(i)};class c{constructor(t,e=a()){this.id=e,this.name=t,this.tasks=[]}getId(){return this.id}getName(){return this.name}setNewName(t){this.name=t}addTask(t){this.tasks.push(t)}removeTask(t){const e=this.tasks.findIndex((e=>e.id==t));this.tasks.splice(e,0)}editTask(t,e){e(this.tasks.find((e=>e.id==t)))}getAllTasks(){return this.tasks}clear(){this.tasks=[]}sortByName(){this.tasks.sort(((t,e)=>{const n=t.title.toUpperCase(),o=e.title.toUpperCase();return n<o?-1:n>o?1:0}))}sortByPriority(){this.tasks.sort(((t,e)=>e.priority-t.priority))}}!function(){const t=[]}();const d=function(){let t={};return{subscribe:function(e,n){t[e]||(t[e]=[]),t[e].push(n)},emit:function(e,n=null){t[e].forEach((t=>{t(n)}))}}}();function u(){const t=document.querySelector(".project-name-input").value;d.emit("projectNameAdded",t),m()}function l(){m()}function m(){const t=document.querySelector(".modal-wrapper");document.body.removeChild(t)}document.querySelector(".add-project").addEventListener("click",(function(){d.emit("newProject")})),console.log("ProjectsUI loaded!"),d.subscribe("newProject",(function(){document.body.appendChild(function(){const t=document.createElement("div");t.classList.add("modal-wrapper");return t.innerHTML='\n      <div class="add-project-modal">\n        <label for="projectNameInput"\n          >New Project\'s name:\n          <input\n            type="text"\n            name="projectNameInput"\n            id="projectNameInput"\n            class="project-name-input"\n          />\n        </label>\n        <div class="modal-buttons">\n          <button class="confirm-modal">Add</button>\n          <button class="cancel-modal">Cancel</button>\n        </div>\n      </div>\n  ',t}()),function(){const t=document.querySelector(".confirm-modal"),e=document.querySelector(".cancel-modal");t.addEventListener("click",u),e.addEventListener("click",l)}()})),console.log("NewProject UI loaded"),console.log("All UI modules loaded")})();